>>> MyList = __import__('1-my_list').MyList
>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]
>>> my_list.print_sorted()
[1, 2, 3, 4, 5]
>>> print(my_list)
[1, 4, 2, 3, 5]

>>> my_list.append(-5)
>>> print(my_list)
[1, 4, 3, 5, -5]

>>> my_list.append(5.1)
>>> my_list.print_sorted()
[1, 3, 4, 5, 5.1]

 my_list.append("scotty")
>>> my_list.append("naruto")
>>> my_list.append("sasuke")
>>> my_list.append("vegeta")
>>> my_list.append("goku")
>>> my_list.print_sorted()
['goku', 'naruto', 'sasuke', 'scotty', 'vegeta']

>>> print(my_list)
['scotty', 'naruto', 'sasuke', 'vegeta', 'goku']

>>> my_list[1] = 8
>>> print(my_list)
[1, 8, 2, 3, 5]

>>> my_list = MyList()
>>> print(my_list)
[]

>>> my_list.append(4)
>>> my_list.append(3)
>>> my_list.append(2)
>>> my_list.remove(4)
>>> print(my_list)
[3, 2]

>>> my_list = MyList([1, "Betty", "scott", 5])
>>> print(my_list)
[1, 'Betty', 'scott', 5]

>>> my_list = MyList(None)
Traceback (most recent call last):
...  
TypeError: 'NoneType' object is not iterable

>>> MyList.append("a")
Traceback (most recent call last):
...
TypeError: descriptor 'append' for 'list' objects doesn't apply to a 'str' object

>>> MyList.append(1)
Traceback (most recent call last):
...
TypeError: descriptor 'append' for 'list' objects doesn't apply to a 'int' object

>>> my_list = MyList([1, 2], [3, 4])
Traceback (most recent call last):
...
TypeError: list expected at most 1 argument, got 2

>>> my_list.print_sorted()
Traceback (most recent call last):
...
    print(sorted(self))
TypeError: '<' not supported between instances of 'str' and 'int'
